import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            int k = sc.nextInt();
            Queue<Integer> queue = new LinkedList<>();
            for (int i = 0; i < n*2; i++) queue.add(sc.nextInt());
            while (k-- > 0) {
                // Left hand
                Queue<Integer> left = new LinkedList<>();
                for (int i = 0; i < n; i++) left.add(queue.poll());
                // Right hand
                Queue<Integer> right = new LinkedList<>();
                for (int i = 0; i < n; i++) right.add(queue.poll());
                // Shuffle cards
                for (int i = 0; i < n; i++) {
                    queue.add(left.poll());
                    queue.add(right.poll());
                }
            }
            while (queue.size() > 1) System.out.print(queue.poll() + " ");
            System.out.print(queue.poll());
            System.out.println();
        }
    }
}



import java.util.Scanner;
 
public class Main {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        while (scan.hasNext()) {
            int N = scan.nextInt();// 输入的人数
            if (N == 0) {// 如果检测到输入的人数为0 则结束
                return;
            }
            int[] arr = new int[N];// 保存N个人的分数
            for (int i = 0; i < arr.length; i++) {
                arr[i] = scan.nextInt();
            }
            int T = scan.nextInt();// 目标分数 输出击中目标分数的个数
            int count = 0;
            for (int i = 0; i < arr.length; i++) {
                if (T == arr[i]) {
                    count++;
                }
            }
            System.out.println(count);
        }
    }
}


import java.util.*;
public class Main {
        public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        while (input.hasNext()) {
            String str = input.next();
            int n = input.nextInt();
            int max = 0;
            int maxBeginIndex = 0;
            for (int i = 0; i <= str.length()-n; i++) {
                int count = 0;
                for (int j = i; j < i+n; j++) {
                    if (str.charAt(j)=='G'||str.charAt(j)=='C')
                        count++;
                }
                if (count > max){
                    maxBeginIndex = i;
                    max = count;
                }
            }
            System.out.println(str.substring(maxBeginIndex, maxBeginIndex+n));
        }
    }
}



import java.util.*;

public class Substr {
    public boolean[] chkSubStr(String[] p, int n, String s) {
        // write code here
         boolean[]hasSub=new boolean[p.length];
         for (int i = 0; i < p.length; i++) {
            hasSub[i]=s.contains(p[i]);
        }
         return hasSub;
    }
}


import java.util.Scanner;
public class Main {
    private static String[] names;
    private static int[] grades;
    private static boolean compare(int i, int j, int flag){
        return flag == 0 ? grades[i] > grades[j] : grades[i] < grades[j];
    }
    private static void exch(int i, int j){
        String tempS = names[j];
        int tempG = grades[j];
        names[j] = names[i];
        grades[j] = grades[i];
        names[i] = tempS;
        grades[i] = tempG;
    }
    public static void sort(int flag){
        for(int i = 1; i < names.length; i++)
            for(int j = i; j > 0 && compare(j,j - 1,flag); j--){
                exch(j,j - 1);
            }
    }
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        Scanner input = new Scanner(System.in);
        while(input.hasNext()){
            int n = input.nextInt();
            int flag = input.nextInt();
            names = new String[n];
            grades = new int[n];
            for(int i = 0; i < n; i++){
                names[i] = input.next();
                grades[i] = input.nextInt();
            }
            sort(flag);
            for(int i = 0; i < n; i++){
                System.out.println(names[i] + " " + grades[i]);
            }
        }
    }
 
}
